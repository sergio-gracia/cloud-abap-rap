name: Generate Token and Send Email

on:
  workflow_dispatch:

jobs:
  generate-and-email:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install jsonwebtoken nodemailer

      - name: Generate Token and Send Email
        env:
          GITHUB_APP_ID: ${{ secrets.APP_ID }}
          GITHUB_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          EMAIL_USER: ${{ secrets.OUTLOOK_EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.OUTLOOK_PASSWORD }}
        run: |
          # Crear un script temporal para generar el token y enviar el correo
          echo "${GITHUB_PRIVATE_KEY}" > private-key.pem

          # Script de Node.js para generar el token y enviar el correo
          node -e "
          const jwt = require('jsonwebtoken');
          const fs = require('fs');
          const nodemailer = require('nodemailer');

          // Cargar la clave privada
          const privateKey = fs.readFileSync('private-key.pem');

          // Crear el JWT
          const token = jwt.sign(
            {
              exp: Math.floor(Date.now() / 1000) + 600,
              iss: process.env.GITHUB_APP_ID
            },
            privateKey,
            { algorithm: 'RS256' }
          );

          // Configurar el transporte de correo usando Outlook
          const transporter = nodemailer.createTransport({
            service: 'Outlook365',
            auth: {
              user: process.env.EMAIL_USER,
              pass: process.env.EMAIL_PASSWORD
            }
          });

          // Configurar el correo electrónico
          const mailOptions = {
            from: process.env.EMAIL_USER,
            to: process.env.EMAIL_USER, // Puedes cambiar esto a otra dirección
            subject: 'Token de instalación de GitHub App',
            text: 'Aquí está el token generado: ' + token
          };

          // Enviar el correo
          transporter.sendMail(mailOptions, (error, info) => {
            if (error) {
              return console.error('Error al enviar el correo:', error);
            }
            console.log('Correo enviado:', info.response);
          });
          " 

          # Limpiar archivo de clave privada
          rm private-key.pem
